name: Deploy lambda infrastructure


on:
  repository_dispatch:
    types: [deploy_lambda]

jobs:

  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      ECR_REPOSITORY_NAME: cgm-handler-repository

      DEXCOM_USERNAME: ${{ secrets.DEXCOM_USERNAME }}
      DEXCOM_PASSWORD: ${{ secrets.DEXCOM_PASSWORD }}
      DEXCOM_APPLICATION_ID: d89443d2-327c-4a6f-89e5-496bbb0317db
      DEXCOM_USER_LOCATION: EU

      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

      IMAGE_TAG: ${{ github.event.client_payload.image_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Install dependencies
        run: npm ci

      - name: Update AWS Lambda infrastructure
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          DEXCOM_USERNAME: ${{ env.DEXCOM_USERNAME }}
          DEXCOM_PASSWORD: ${{ env.DEXCOM_PASSWORD }}
          DEXCOM_APPLICATION_ID: ${{ env.DEXCOM_APPLICATION_ID }}
          DEXCOM_USER_LOCATION: ${{ env.DEXCOM_USER_LOCATION }}
          DATABASE_HOST: ${{ env.DATABASE_HOST }}
          DATABASE_PORT: ${{ env.DATABASE_PORT }}
          DATABASE_USER: ${{ env.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ env.DATABASE_NAME }}
        run: |
          npm run bootstrap
          npm run deploy:lambda

